<repository lastmodified='20201103044558.350'>
  <resource id='com.candylio.jira.plugins.jira-guu/1.0.0.SNAPSHOT' symbolicname='com.candylio.jira.plugins.jira-guu' presentationname='Generate Unlicensed User for JIRA' uri='jira-guu-1.0.0-SNAPSHOT.jar' version='1.0.0.SNAPSHOT'>
    <description>This is the com.candylio.jira.plugins:jira-guu plugin for Atlassian JIRA.</description>
    <size>1364135</size>
    <capability name='bundle'>
      <p n='symbolicname' v='com.candylio.jira.plugins.jira-guu'/>
      <p n='presentationname' v='Generate Unlicensed User for JIRA'/>
      <p n='version' t='version' v='1.0.0.SNAPSHOT'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <require name='package' filter='(&amp;(package=org.springframework.aop.support))' extend='false' multiple='false' optional='true'>Import package org.springframework.aop.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans))' extend='false' multiple='false' optional='true'>Import package org.springframework.beans;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory))' extend='false' multiple='false' optional='true'>Import package org.springframework.beans.factory;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.annotation))' extend='false' multiple='false' optional='true'>Import package org.springframework.beans.factory.annotation;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.config))' extend='false' multiple='false' optional='true'>Import package org.springframework.beans.factory.config;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.parsing))' extend='false' multiple='false' optional='true'>Import package org.springframework.beans.factory.parsing;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.support))' extend='false' multiple='false' optional='true'>Import package org.springframework.beans.factory.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.springframework.beans.factory.xml))' extend='false' multiple='false' optional='true'>Import package org.springframework.beans.factory.xml;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.springframework.context.annotation))' extend='false' multiple='false' optional='true'>Import package org.springframework.context.annotation;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.service.exporter.support))' extend='false' multiple='false' optional='true'>Import package org.springframework.osgi.service.exporter.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.service.importer.support))' extend='false' multiple='false' optional='true'>Import package org.springframework.osgi.service.importer.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.springframework.stereotype))' extend='false' multiple='false' optional='true'>Import package org.springframework.stereotype;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.springframework.util))' extend='false' multiple='false' optional='true'>Import package org.springframework.util;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.eclipse.gemini.blueprint.service.exporter))' extend='false' multiple='false' optional='true'>Import package org.eclipse.gemini.blueprint.service.exporter;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.eclipse.gemini.blueprint.service.exporter.support))' extend='false' multiple='false' optional='true'>Import package org.eclipse.gemini.blueprint.service.exporter.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.eclipse.gemini.blueprint.service.importer.support))' extend='false' multiple='false' optional='true'>Import package org.eclipse.gemini.blueprint.service.importer.support;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.apache.log4j))' extend='false' multiple='false' optional='true'>Import package org.apache.log4j;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.issue))' extend='false' multiple='false' optional='true'>Import package com.atlassian.jira.issue;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.plugin.webfragment.contextproviders))' extend='false' multiple='false' optional='true'>Import package com.atlassian.jira.plugin.webfragment.contextproviders;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.plugin.webfragment.model))' extend='false' multiple='false' optional='true'>Import package com.atlassian.jira.plugin.webfragment.model;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.security))' extend='false' multiple='false' optional='true'>Import package com.atlassian.jira.security;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.user))' extend='false' multiple='false' optional='true'>Import package com.atlassian.jira.user;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.web))' extend='false' multiple='false' optional='true'>Import package com.atlassian.jira.web;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.web.action))' extend='false' multiple='false' optional='true'>Import package com.atlassian.jira.web.action;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=com.atlassian.pocketknife.spi.info))' extend='false' multiple='false' optional='true'>Import package com.atlassian.pocketknife.spi.info;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=io.atlassian.fugue))' extend='false' multiple='false' optional='true'>Import package io.atlassian.fugue;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom))' extend='false' multiple='false' optional='true'>Import package org.w3c.dom;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=com.atlassian.annotations.tenancy))' extend='false' multiple='false' optional='false'>Import package com.atlassian.annotations.tenancy</require>
    <require name='package' filter='(&amp;(package=com.atlassian.event.api))' extend='false' multiple='false' optional='false'>Import package com.atlassian.event.api</require>
    <require name='package' filter='(&amp;(package=com.atlassian.plugin.osgi.factory))' extend='false' multiple='false' optional='false'>Import package com.atlassian.plugin.osgi.factory</require>
    <require name='package' filter='(&amp;(package=com.atlassian.sal.api))' extend='false' multiple='false' optional='false'>Import package com.atlassian.sal.api</require>
    <require name='package' filter='(&amp;(package=com.atlassian.sal.api.rdbms))' extend='false' multiple='false' optional='false'>Import package com.atlassian.sal.api.rdbms</require>
    <require name='package' filter='(&amp;(package=com.atlassian.util.concurrent))' extend='false' multiple='false' optional='false'>Import package com.atlassian.util.concurrent</require>
    <require name='package' filter='(&amp;(package=com.google.common.base))' extend='false' multiple='false' optional='false'>Import package com.google.common.base</require>
    <require name='package' filter='(&amp;(package=com.google.common.cache))' extend='false' multiple='false' optional='false'>Import package com.google.common.cache</require>
    <require name='package' filter='(&amp;(package=com.google.common.collect))' extend='false' multiple='false' optional='false'>Import package com.google.common.collect</require>
    <require name='package' filter='(&amp;(package=com.google.common.io))' extend='false' multiple='false' optional='false'>Import package com.google.common.io</require>
    <require name='package' filter='(&amp;(package=com.google.common.primitives))' extend='false' multiple='false' optional='false'>Import package com.google.common.primitives</require>
    <require name='package' filter='(&amp;(package=javax.lang.model))' extend='false' multiple='false' optional='false'>Import package javax.lang.model</require>
    <require name='package' filter='(&amp;(package=javax.net.ssl))' extend='false' multiple='false' optional='false'>Import package javax.net.ssl</require>
    <require name='package' filter='(&amp;(package=javax.servlet.http))' extend='false' multiple='false' optional='false'>Import package javax.servlet.http</require>
    <require name='package' filter='(&amp;(package=javax.sql))' extend='false' multiple='false' optional='false'>Import package javax.sql</require>
    <require name='package' filter='(&amp;(package=javax.xml.parsers))' extend='false' multiple='false' optional='false'>Import package javax.xml.parsers</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform))' extend='false' multiple='false' optional='false'>Import package javax.xml.transform</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.dom))' extend='false' multiple='false' optional='false'>Import package javax.xml.transform.dom</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.stream))' extend='false' multiple='false' optional='false'>Import package javax.xml.transform.stream</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.lang))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.lang</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.lang3))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.lang3</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.logging))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.logging</require>
    <require name='package' filter='(&amp;(package=org.joda.time))' extend='false' multiple='false' optional='false'>Import package org.joda.time</require>
    <require name='package' filter='(&amp;(package=org.joda.time.format))' extend='false' multiple='false' optional='false'>Import package org.joda.time.format</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker</require>
    <require name='package' filter='(&amp;(package=org.slf4j))' extend='false' multiple='false' optional='false'>Import package org.slf4j</require>
    <require name='package' filter='(&amp;(package=webwork.action))' extend='false' multiple='false' optional='false'>Import package webwork.action</require>
    <require name='package' filter='(&amp;(package=com.atlassian.jira.plugin.webfragment))' extend='false' multiple='false' optional='true'>Import package com.atlassian.jira.plugin.webfragment;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=com.sun.image.codec.jpeg))' extend='false' multiple='false' optional='true'>Import package com.sun.image.codec.jpeg;resolution:=optional</require>
  </resource>
</repository>